#ifndef __CONTROL_H
#define __CONTROL_H

/**############################################################################
 # INCLUDES
 #############################################################################*/


#include "io/convert.h"
#include "io/ioconfigfile.h"
#include "io/iodirectory.h"
#include "io/ioserial.h"

#include <algorithm>
#include <chrono>
#include <cmath>
#include <functional>
#include <string>
#include <thread>
#include <unistd.h>


/**############################################################################
 # NAMES
 #############################################################################*/

using namespace std;

/**############################################################################
 # DEFINES
 #############################################################################*/

/**############################################################################
 # CLASS DECLARATIONS
 #############################################################################*/

/******************************************************************************
 * A Exception class that refers to the @ref Control class.
 *****************************************************************************/
class ControlExcept {
public:
	/** a list of known possible errors with class Control *********************/
	//enum {};

	/** the number of error ****************************************************/
	int num;

	/****************************************************************************
	 * This construction function is used to set the number of exception.
	 * @param _num Number of error that has been found.
	 ***************************************************************************/
	ControlExcept(int _num);
};

/******************************************************************************
 *****************************************************************************/
class Control {

	/** an object for the conversion of values into strings and vice versa *****/
	Convert convert;

	/** an object to handle the input configuration file ***********************/
	IoConfigFile ioConf;

	/** an object to handle directory operations *******************************/
	IoDirectory outputDir;

	/** output path for simulation results *************************************/
	string outputPath;

public:
	/****************************************************************************
	 ***************************************************************************/
	Control(const string &_applicationName, const string &_confFileName);

	/****************************************************************************
	 ***************************************************************************/
	~Control();

	/****************************************************************************
	 ***************************************************************************/
	void run();
};

/**############################################################################
 # INLINE MEMBER DEFINITIONS
 #############################################################################*/

/**############################################################################
 # TEMPLATE MEMBER DEFINITIONS
 #############################################################################*/

/**############################################################################
 # NON MEMBER DECLARATIONS
 #############################################################################*/

/**############################################################################
 # END OF FILE
 #############################################################################*/

#endif /* __CONTROL_H ********************************************************/
